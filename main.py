import os
import requests
import trafilatura
from datetime import datetime, timedelta
import pytz
import schedule
import time
from telegram import Bot
import google.generativeai as genai

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ –∏ —á–∞—Ç–∞ ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN") or "1234567890:ABCdefGhIJKlmnOPQrstUVwxYZ"
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID") or "@–∏–º—è_—Ç–≤–æ–µ–≥–æ_–∫–∞–Ω–∞–ª–∞"
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY") or "–í–ê–®_GEMINI_API_KEY"

if ":" not in TELEGRAM_TOKEN:
    raise ValueError("‚ùå TELEGRAM_TOKEN –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π. –£–∫–∞–∂–∏ —Ç–æ–∫–µ–Ω –æ—Ç BotFather!")

bot = Bot(token=TELEGRAM_TOKEN)

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Gemini API ---
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel("gemini-pro")

# --- –ü–∞–º—è—Ç—å –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–∞—Ö (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É–±–ª–µ–π) ---
posted_ids = []

# --- –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø-–Ω–æ–≤–æ—Å—Ç–µ–π —Å Hacker News ---
def get_top_hn_articles(limit=10):
    top_ids = requests.get("https://hacker-news.firebaseio.com/v0/topstories.json").json()
    articles = []
    for item_id in top_ids[:limit]:
        item = requests.get(f"https://hacker-news.firebaseio.com/v0/item/{item_id}.json").json()
        if item and "url" in item:
            articles.append({"id": item_id, "title": item["title"], "url": item["url"]})
    return articles

# --- –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ ---
def extract_full_text(url):
    downloaded = trafilatura.fetch_url(url)
    if downloaded:
        return trafilatura.extract(downloaded)
    return None

# --- –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ Gemini ---
def translate_text(text):
    prompt = f"""
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.
–ü–µ—Ä–µ–≤–µ–¥–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ —Ç–µ–∫—Å—Ç –Ω–∏–∂–µ, —Å–æ—Ö—Ä–∞–Ω–∏–≤ —Å—Ç–∏–ª—å –∏ —Å–º—ã—Å–ª.
–£–¥–∞–ª–∏ –º—É—Å–æ—Ä–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, —Ä–µ–π—Ç–∏–Ω–≥–∏, –æ—Ü–µ–Ω–∫–∏ –≤–∏–¥–∞ (–û—Ü–µ–Ω–∫–∞:5) –∏ –ø–æ–¥–æ–±–Ω–æ–µ.

–¢–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞:
{text}
"""
    response = model.generate_content(prompt)
    return response.text.strip()

# --- –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram ---
def post_to_telegram(title, translated_text, url):
    message = f"üî• **{title}**\n\n{translated_text}\n\nüîó [–ß–∏—Ç–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª]({url})"
    bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message, parse_mode="Markdown")

# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---
def job():
    global posted_ids
    print("üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏:", datetime.now(pytz.timezone("Europe/Moscow")).strftime("%Y-%m-%d %H:%M:%S"))

    articles = get_top_hn_articles(limit=10)

    count = 0
    for article in articles:
        if article["id"] in posted_ids:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —É–∂–µ –ø–æ—Å—Ç–∏–ª–∏
        text = extract_full_text(article["url"])
        if text:
            translated = translate_text(text)
            post_to_telegram(article["title"], translated, article["url"])
            posted_ids.append(article["id"])
            count += 1
        if count >= 3:
            break

    # –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 ID
    posted_ids = posted_ids[-30:]

# --- –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ ---
schedule.every().day.at("09:00").do(job)
schedule.every().day.at("12:00").do(job)
schedule.every().day.at("18:00").do(job)

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ñ–¥—ë–º –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å—Ç–∏–Ω–≥–∞...")
# –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å—Ä–∞–∑—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
post_top_news()
while True:
    schedule.run_pending()
    time.sleep(30)
